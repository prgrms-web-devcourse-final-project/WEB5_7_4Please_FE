/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ProductsIndexRouteImport } from './routes/products/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as indexIndexRouteImport } from './routes/(index)/index'
import { Route as ProductsIdRouteImport } from './routes/products/$id'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsIndexRoute = ProductsIndexRouteImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LoginRoute,
} as any)
const indexIndexRoute = indexIndexRouteImport.update({
  id: '/(index)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsIdRoute = ProductsIdRouteImport.update({
  id: '/products/$id',
  path: '/products/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRouteWithChildren
  '/products/$id': typeof ProductsIdRoute
  '/': typeof indexIndexRoute
  '/login/': typeof LoginIndexRoute
  '/products': typeof ProductsIndexRoute
}
export interface FileRoutesByTo {
  '/products/$id': typeof ProductsIdRoute
  '/': typeof indexIndexRoute
  '/login': typeof LoginIndexRoute
  '/products': typeof ProductsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/login': typeof LoginRouteWithChildren
  '/products/$id': typeof ProductsIdRoute
  '/(index)/': typeof indexIndexRoute
  '/login/': typeof LoginIndexRoute
  '/products/': typeof ProductsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/products/$id' | '/' | '/login/' | '/products'
  fileRoutesByTo: FileRoutesByTo
  to: '/products/$id' | '/' | '/login' | '/products'
  id:
    | '__root__'
    | '/login'
    | '/products/$id'
    | '/(index)/'
    | '/login/'
    | '/products/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LoginRoute: typeof LoginRouteWithChildren
  ProductsIdRoute: typeof ProductsIdRoute
  indexIndexRoute: typeof indexIndexRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/'
      fullPath: '/login/'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof LoginRoute
    }
    '/(index)/': {
      id: '/(index)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof indexIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/$id': {
      id: '/products/$id'
      path: '/products/$id'
      fullPath: '/products/$id'
      preLoaderRoute: typeof ProductsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface LoginRouteChildren {
  LoginIndexRoute: typeof LoginIndexRoute
}

const LoginRouteChildren: LoginRouteChildren = {
  LoginIndexRoute: LoginIndexRoute,
}

const LoginRouteWithChildren = LoginRoute._addFileChildren(LoginRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LoginRoute: LoginRouteWithChildren,
  ProductsIdRoute: ProductsIdRoute,
  indexIndexRoute: indexIndexRoute,
  ProductsIndexRoute: ProductsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
